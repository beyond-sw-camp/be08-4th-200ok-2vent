name: backend-pipeline


on:
  push:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v3

      - name: Check if backend code has changed
        id: check
        run: |
          CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r $GITHUB_SHA)
          echo "CHANGED_FILES=$CHANGED_FILES"
          if echo "$CHANGED_FILES" | grep -q '^backend/'; then
            echo "::set-output name=backend_changed::true"
          else
            echo "::set-output name=backend_changed::false"
          fi
    outputs:
      backend-changed: ${{ steps.check.outputs.backend_changed }}

  build-backend:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.backend-changed == 'true'
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Copy config file
        env:
          APPLICATION_YML_BASE64: ${{ secrets.APPLICATION_YML_BASE64 }}
        run: |
          echo "$APPLICATION_YML_BASE64" | base64 -d > ./backend/src/main/resources/application.yml

      - name: Build Backend
        run: |
          cd ./backend
          chmod +x gradlew
          ./gradlew build

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-backend
    if: needs.check-changes.outputs.backend-changed == 'true'
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          cd ./backend
          DOCKER_IMAGE_TAG="1.${{ github.run_number }}-be"
          docker build --no-cache -t ${{ secrets.DOCKER_HUB_REPO }}:$DOCKER_IMAGE_TAG .
          docker push ${{ secrets.DOCKER_HUB_REPO }}:$DOCKER_IMAGE_TAG

  deploy-backend:
    runs-on: ubuntu-latest
    needs: docker-build-push
    if: needs.check-changes.outputs.backend-changed == 'true'
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        env:
          DOCKER_IMAGE_TAG: "1.${{ github.run_number }}-be"
        run: |
          kubectl set image deployment backend-deployment backend-container=${{ secrets.DOCKER_HUB_REPO }}:$DOCKER_IMAGE_TAG -n default

  notify-discord:
    runs-on: ubuntu-latest
    needs: [build-backend, docker-build-push, deploy-backend]
    steps:
      - name: Send notification to Discord
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"content":"**CI/CD Pipeline Success**\n'\
                  'Build Number: '${{ github.run_number }}'\n'\
