import type { KakaoMapMarkerProps } from './types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_TypePropsToOption<KakaoMapMarkerProps>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    onLoadKakaoMapMarker: (...args: any[]) => void;
    onClickKakaoMapMarker: (...args: any[]) => void;
    dragEndKakaoMapMarker: (...args: any[]) => void;
    mouseOverKakaoMapMarker: (...args: any[]) => void;
    mouseOutKakaoMapMarker: (...args: any[]) => void;
    deleteKakaoMapMarker: (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<__VLS_TypePropsToOption<KakaoMapMarkerProps>>> & {
    onOnLoadKakaoMapMarker?: ((...args: any[]) => any) | undefined;
    onOnClickKakaoMapMarker?: ((...args: any[]) => any) | undefined;
    onDragEndKakaoMapMarker?: ((...args: any[]) => any) | undefined;
    onMouseOverKakaoMapMarker?: ((...args: any[]) => any) | undefined;
    onMouseOutKakaoMapMarker?: ((...args: any[]) => any) | undefined;
    onDeleteKakaoMapMarker?: ((...args: any[]) => any) | undefined;
}, {}, {}>, {
    infoWindow?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToOption<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
